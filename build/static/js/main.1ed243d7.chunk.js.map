{"version":3,"sources":["components/AppLoader.jsx","components/MainPage.jsx","components/MainHeader.jsx","components/MainSection.jsx","components/MainFooter.jsx","services/contact.js","components/Alert.jsx","components/ContactBox.jsx","utils/Check.js","utils/Utils.js","components/ProjectList.jsx","components/ProjectCard.jsx","components/FilterBox.jsx","components/Tag.jsx","components/TagButton.jsx","services/projects.js","App.js","index.js"],"names":["AppLoader","className","data-ref","MainPage","props","title","classNames","defaultList","projectsData","MainHeader","role","aria-label","href","target","rel","MainSection","children","MainFooter","postMessage","messageData","a","fetch","BASE_URL","method","headers","body","JSON","stringify","response","ok","Error","statusText","json","console","error","Alert","ContactBox","handleSubmit","event","preventDefault","email","subject","message","status","handleSuccess","handleError","handleInput","field","value","currentTarget","setCurrentField","setEmail","setSubject","setMessage","resetForm","setSuccessAlert","setErrorAlert","document","activeElement","blur","useState","successAlert","errorAlert","useEffect","setTimeout","onSubmit","type","placeholder","onChange","required","Check","areEqualArrays","b","Array","isArray","length","reduce","acc","curr","includes","Utils","getUniqueTagList","projectList","tagList","tags","tagSet","Set","filterByTagList","filter","project","pause","ms","Promise","resolve","ProjectList","clearFilters","setFilterBoxKey","filterBoxKey","currentList","setCurrentList","key","filterList","applyFilters","filters","updatedList","map","i","projectData","onClick","ProjectCard","name","description","image","demo","repo","src","alt","tag","FilterBox","activeFilters","setActiveFilters","filterName","updatedFilters","handleFilterChange","Tag","TagButton","isActive","setIsActive","getProjectsData","warn","App","loadApp","tasks","all","setProjectsData","setIsLoading","isLoading","isLoaderReadyForRemove","setIsLoaderReadyForRemove","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ed243d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppLoader = ({ className }) => {\n  return (\n    <div className={`c-app-loader ${className}`}>\n      <div className=\"container\">\n        <div className=\"loader\">\n          <div className=\"outer\"></div>\n          <div className=\"inner\"></div>\n        </div>\n        \n        <ul className=\"messages\" data-ref=\"messages\"></ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AppLoader;","import React from 'react';\nimport {\n  MainHeader,\n  MainSection,\n  MainFooter,\n  ProjectList,\n  ContactBox,\n} from './';\n\nconst MainPage = (props) => (\n  <>\n    <MainHeader />\n\n    <MainSection title=\"Projects\" classNames=\"full-height dark\">\n      <ProjectList defaultList={props.projectsData}/>\n    </MainSection>\n\n    <MainSection title=\"Contact\">\n      <ContactBox />\n    </MainSection>\n\n    <MainFooter />\n  </>\n);\n\nexport default MainPage;","import React from 'react';\nimport { Alert } from './';\n\nconst MainHeader = () => (\n  <header className=\"c-main-header\">\n    <h1>\n      <span>Gr√©gory Albouy</span>\n      <span className=\"subtitle\">student Web developer @HETIC</span>\n    </h1>\n\n    <p>Fond of JavaScript environment, especially <strong>Webcomponents</strong> and <strong>Node.js</strong>.</p>\n    <p>I enjoy <strong>solving problems</strong> and building things <strong>from scratch</strong>.</p>\n\n    <Alert>\n      <p>\n        I am looking for a <strong>3-6 months internship</strong> in web development starting from July, preferably in <em>Full-Stack JavaScript</em>.\n      </p>\n      <ul>\n        <li>\n          <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">üìÑ</span>\n          Have a look at <strong><a href=\"https://gregoryalbouy.com/cv\" title=\"my CV\" target=\"_blank\" rel=\"noopener noreferrer\">my CV</a></strong>\n        </li>\n        <li>\n          <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">‚¨áÔ∏è</span>\n          Check out my work below\n        </li>\n      </ul>\n    </Alert>\n  </header>\n);\n\nexport default MainHeader;","import React from 'react';\n\nconst MainSection = ({ title, children, classNames }) => {\n  return (\n    <section className={`c-main-section ${classNames || ''}`}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default MainSection;","import React from 'react';\n\nconst MainFooter = () => {\n  return (\n    <footer className=\"c-main-footer\">\n      <p>Gr√©gory Albouy ¬© 2020</p>\n    </footer>\n  );\n};\n\nexport default MainFooter;","const BASE_URL = process.env['REACT_APP_REMOTE_API_BASE_URL'];\nconst CONTACT_PATH = '/contact';\nconst CONTACT_URL = BASE_URL + CONTACT_PATH;\n\nexport const postMessage = async (messageData) => {\n  try {\n      const response = await fetch(CONTACT_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json;charset=utf-8' },\n          body: JSON.stringify(messageData)\n      })\n\n      if (!response.ok) throw new Error(response.statusText)\n\n      return response.json()\n  } catch(error) {\n      console.error(error)\n  }\n}","import React from 'react';\n\nconst Alert = ({ classNames, children }) => (\n  <aside className={`c-alert ${classNames || ''}`}>\n    {children}\n  </aside>\n);\n\nexport default Alert;","import React, { useState, useEffect } from 'react';\nimport { postMessage } from '../services/contact';\nimport Alert from './Alert';\n\nconst ContactBox = () => {\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const messageData = {\n      email,\n      subject,\n      message\n    };\n    \n    try {\n      const response = await postMessage(messageData);\n\n      if (!response || response.status !== 201) throw new Error('Invalid message.');\n\n      handleSuccess();\n    } catch(error) {\n      handleError(error.message);\n    }\n  };\n\n  const handleInput = (event, field) => {\n    const value = event.currentTarget.value;\n\n    const setCurrentField = {\n      email: setEmail,\n      subject: setSubject,\n      message: setMessage\n    }[field] || null;\n\n    if (!setCurrentField) return;\n\n    setCurrentField(value);\n  };\n\n  const handleSuccess = () => {\n    resetForm();\n    setSuccessAlert('Message sent!');\n  }\n\n  const handleError = (message) => {\n    setErrorAlert(message)\n  }\n\n  const resetForm = () => {\n    setEmail('');\n    setSubject('');\n    setMessage('');\n    document.activeElement.blur();\n  }\n\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const [successAlert, setSuccessAlert] = useState('');\n  const [errorAlert, setErrorAlert] = useState('');\n\n  useEffect(() => {\n    if (successAlert) setTimeout(() => setSuccessAlert(''), 3000)\n    if (errorAlert) setTimeout(() => setErrorAlert(''), 3000)\n  }, [successAlert, errorAlert])\n\n  return (\n    <div className=\"c-contact-box\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"from: ceo@google.com\"\n          value={email}\n          onChange={(event) => handleInput(event, 'email')}\n          required\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"about: We want you!\"\n          value={subject}\n          onChange={(event) => handleInput(event, 'subject')}\n          required\n        />\n\n        <textarea\n          placeholder=\"Hello Gregory,\"\n          value={message}\n          onChange={(event) => handleInput(event, 'message')}\n          required\n        >\n        </textarea>\n\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n\n      {successAlert ? <Alert classNames=\"success\"><p>{successAlert}</p></Alert> : ''}\n      {errorAlert ? <Alert classNames=\"error\"><p>{errorAlert}</p></Alert> : ''}\n    </div>\n  );\n};\n\nexport default ContactBox;","const Check = {\n  areEqualArrays(a, b) {\n    return (\n      Array.isArray(a) && Array.isArray(b)\n      && a.length === b.length\n      && a.reduce((acc, curr) => acc && b.includes(curr), true)\n    )\n  }\n}\n\nexport default Check;","const Utils = {\n  getUniqueTagList(projectList) {\n    const tagList = projectList.reduce((acc, curr) => [...acc, ...curr.tags], projectList[0].tags);\n    const tagSet = new Set(tagList);\n    return [...tagSet]\n  },\n\n  filterByTagList(projectList, tagList) {\n    return projectList.filter((project) => {\n      return tagList.reduce((acc, curr) => {\n        return acc && project.tags.includes(curr) // Current projeet has all tags in tagList\n      }, true);\n    });\n  },\n\n  pause(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  } \n}\n\nexport default Utils;","import React, { useState, useEffect } from 'react';\nimport {\n  FilterBox,\n  ProjectCard,\n  Alert\n} from './';\nimport {\n  Check,\n  Utils\n} from '../utils';\n\nconst ProjectList = ({ defaultList }) => {\n\n  const applyFilters = (filters) => {\n    const filterDefaultList = () => Utils.filterByTagList(defaultList, filters);\n\n    const updatedList = !filters.length ? defaultList : filterDefaultList();\n  \n    if (Check.areEqualArrays(currentList, updatedList)) return;\n    setCurrentList(updatedList);\n  };\n\n  const clearFilters = () => {\n    // force FilterBox component reset\n    setFilterBoxKey(filterBoxKey + 1)\n  };\n\n  const renderError = () => (\n    <Alert className=\"error\">\n      <p>Problem fetching projects data. Please try again later.</p>\n    </Alert>\n  );\n\n  const renderEmpty = () => (\n    <li className=\"empty\">\n      <h4>No more matches :(</h4>\n      <button className=\"c-tag-button\" onClick={clearFilters}>Clear filters</button>\n    </li>\n  );\n\n  const renderContent = () => (\n    currentList.map((project, i) => (\n      <li key={i}><ProjectCard projectData={project} /></li>\n    ))\n  );\n\n  const [filterBoxKey, setFilterBoxKey] = useState(0);\n  const [currentList, setCurrentList] = useState([]);\n\n  useEffect(() => {\n    if (defaultList) setCurrentList(defaultList);\n  }, [defaultList]);\n\n  return !defaultList.length ? renderError() : (\n    <>\n      <FilterBox\n        key={filterBoxKey}\n        filterList={Utils.getUniqueTagList(defaultList)}\n        applyFilters={applyFilters}\n      />\n\n      <ul className=\"c-project-list\">\n        {!currentList.length ? renderEmpty() : renderContent()}\n      </ul>\n    </>\n  );\n};\n\nexport default ProjectList;","import React from 'react';\nimport { Tag } from './';\n\nconst ProjectCard = (props) => {\n  const {\n    name,\n    description,\n    image,\n    demo,\n    repo,\n    tags\n  } = props.projectData\n\n  return (\n    <article className=\"c-project-card\">\n      <div className=\"img-container\">\n        {image ? <img src={image} alt={name}></img> : <span>no illustration</span>}\n\n        <div className=\"overlay\">\n          {demo ? <a className=\"demo\" href={demo} title={`${name} demo`} target=\"_blank\" rel=\"noopener noreferrer\">Try me!</a>: ''}\n          {repo ? <a className=\"repo\" href={repo} title={`${name} repo`} target=\"_blank\" rel=\"noopener noreferrer\">View repo</a>: ''}\n        </div>\n      </div>\n      \n      <div className=\"content\">\n          <h3>{name}</h3>\n          <div className=\"slider\">\n            <p>{description}</p>\n            <ul className=\"tag-list\">\n              {tags.map((tag, i) => (\n                <li key={i}><Tag name={tag}/></li>\n              ))}\n            </ul>\n          </div>\n      </div>\n    </article>\n  );\n};\n\nexport default ProjectCard;","import React, { useState, useEffect } from 'react';\nimport { TagButton } from './';\n\nconst FilterBox = ({ filterList, applyFilters }) => {\n  const handleFilterChange = (filterName) => {\n    const updatedFilters = activeFilters.includes(filterName)\n      ? activeFilters.filter((filter) => filter !== filterName)\n      : [...activeFilters, filterName];\n\n    setActiveFilters(updatedFilters);\n  };\n\n  const [activeFilters, setActiveFilters] = useState([]);\n\n  useEffect(() => {\n    applyFilters(activeFilters);\n  }, [activeFilters, applyFilters]);\n\n  return (\n    <ul className=\"c-filter-box\">\n      {filterList.map((filterName, i) => (\n        <li key={i}>\n          <TagButton name={filterName} onClick={() => handleFilterChange(filterName)} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilterBox;","import React from 'react';\n\nconst Tag = (props) => <span className=\"c-tag\">{props.name}</span>\n\nexport default Tag;","import React, { useState } from 'react';\n\nconst TagButton = (props) => {\n  const handleClick = () => {\n    setIsActive(!isActive);\n    props.onClick()\n  };\n\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <button\n      className={`c-tag-button ${isActive ? 'is-active' : ''}`}\n      onClick={handleClick}\n    >\n      {props.name}\n    </button>\n  );\n};\n\nexport default TagButton;","const BASE_URL = process.env['REACT_APP_REMOTE_API_BASE_URL'];\nconst PROJECTS_PATH = '/api/v1/projects';\nconst PROJECTS_URL = BASE_URL + PROJECTS_PATH;\n\nexport const getProjectsData = async () => {\n  try {\n    const response = await fetch(PROJECTS_URL);\n\n    if (!response.ok) throw new Error('Projects data could not be loaded. Please try again later.');\n\n    const projectsData = await response.json();\n\n    return projectsData;\n  } catch(error) {\n    console.warn(error);\n  }\n};","import React, { useState, useEffect } from 'react';\nimport {\n  AppLoader,\n  MainPage\n} from './components';\nimport { getProjectsData } from './services/projects';\nimport { Utils } from './utils'\n\nconst App = () => {\n  const loadApp = async () => {\n    const tasks = [\n      getProjectsData(),\n      Utils.pause(1000)\n    ]\n\n    const projectsData = (await Promise.all(tasks))[0];\n\n    setProjectsData(projectsData);\n    setIsLoading(false);\n  };\n\n  const dismissLoader = () => {\n    setTimeout(() => {\n      setIsLoaderReadyForRemove(false)\n    }, 1000);\n  }\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoaderReadyForRemove, setIsLoaderReadyForRemove] = useState(true);\n  const [projectsData, setProjectsData] = useState([]);\n\n  useEffect(() => {\n    loadApp();\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) dismissLoader()\n  }, [isLoading])\n  \n  // return isLoading ? <AppLoader /> : <MainPage projectsData={projectsData} />\n\n  return (\n    <>\n      {isLoaderReadyForRemove ? <AppLoader className={isLoading ? '' : 'fade-out'} /> : ''}\n      \n      <MainPage projectsData={projectsData} />\n    </>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}